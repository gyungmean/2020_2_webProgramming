/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.106
 * Generated at: 2020-10-26 14:22:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.Practice19;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Calendar;

public final class Practice19_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


	public String parseDay(int cnt, String day){
		if(cnt == 7){
			return "<font color=\"blue\">" + day + "</font>";
		}
		else if(cnt == 1){
			return "<font color=\"red\">" + day + "</font>";
		}
		return day;
	}

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>calendar.jsp</title>\r\n");
      out.write("<style>\r\n");
      out.write("\ttable.cal {\r\n");
      out.write("\t\twidth: 700px;\r\n");
      out.write("\t    height: 300px;\r\n");
      out.write("\t    border: 1px solid black;\r\n");
      out.write("\t    border-collapse: collapse;\r\n");
      out.write("  \t}\r\n");
      out.write("  \ttable.date{\r\n");
      out.write("  \t\twidth: 700px;\r\n");
      out.write("  \t}\r\n");
      out.write("  \ttr.cal, td.cal {\r\n");
      out.write("    \tborder: 1px solid black;\r\n");
      out.write("    \ttext-align: center;\r\n");
      out.write("    \tfont-weight: bold;\r\n");
      out.write("  \t}\r\n");
      out.write("  \ttr.date, td.date {\r\n");
      out.write("    \ttext-align: right;\r\n");
      out.write("  \t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

	Calendar today = Calendar.getInstance();

	int year = today.get(Calendar.YEAR);
	int month = today.get(Calendar.MONTH) + 1;
	Calendar cal = Calendar.getInstance();;
	cal.set(year, month - 1, 1);
	int date = today.get(Calendar.DATE);
	out.println("<div align=\"center\">");
	out.println("<table class=\"date\">");
	out.println("<tr class=\"date\">");
	out.println("<td class=\"date\"><h3>" + year + "-" + month + "-" + date + "</h3></td>");
	out.println("</tr>");
	out.println("</table>");
	
	cal.set(year, month - 1, 1);
	int day = cal.get(Calendar.DAY_OF_WEEK);
	int day_count = 0;
	String[] day_word = {"일", "월" , "화", "수", "목", "금", "토"};
	
	out.println("<table class=\"cal\">");
	out.println("<tr class=\"cal\">");
		for(int i = 1; i <= 7; i++){
			out.println("<td class=\"cal\">" + parseDay(i, day_word[i - 1]) + "</td>");
		}
	out.println("</tr>");
	out.println("<tr class=\"cal\">");
		for(int i = 1; i < day; i++){
			out.println("<td class=\"cal\">&nbsp;</td>");
			day_count++;
		}
		for(int i = 1; i <= cal.getActualMaximum(Calendar.DAY_OF_MONTH); i++){
			if(day_count % 7 == 0){
				out.println("</tr>");
				out.println("<tr class=\"cal\">");
			}
			out.println("<td class=\"cal\">"+ parseDay(day_count % 7 + 1 , Integer.toString(i)) + "</td>");
			day_count++;
		}
		if(day_count % 7 != 0){
			for(int i = day_count % 7; i < 7; i++){
				out.println("<td class=\"cal\">&nbsp;</td>");
				day_count++;
			}
		}
	out.println("</tr>");
	out.println("</table>");
	out.println("</div>");
	

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
